@use "sass:map";
@use '../../styles/variables.module.scss';

.transactionsTable {
  width: 100%;
  min-width: 800px; 
  max-width: 100%;
  border-collapse: collapse;
  background: variables.bg-color(white);
  box-shadow: 0 1px 3px variables.color(shadow);
  font-size: variables.font-size(sm);
  margin-top: variables.spacing(md); // Add some top margin

  @include variables.responsive(md) {
    font-size: variables.font-size(base);
  }

  th, td {
    border: 1px solid variables.color(border);
    padding: variables.spacing(sm);
    text-align: left;
    white-space: nowrap;
  }

  th {
    background: variables.bg-color(light);
    font-weight: 700;
    color: variables.text-color(secondary);
    position: sticky;
    top: 0; // Adjust if needed based on layout context
    z-index: 1;
  }

  tr {
    &:nth-child(even) {
      background: variables.bg-color(light);
    }

    td {
      color: variables.text-color(primary);
      font-family: monospace; // Use browser default monospace font
      font-size: variables.font-size(xs);

      &.statusSuccess {
        color: variables.color(success);
        font-weight: 700;
      }
      &.statusFailed {
        color: variables.color(negative);
        font-weight: 700;
      }
      &.statusLoading { // Style for loading status
        color: variables.text-color(secondary);
        font-style: italic;
      }

      // Transaction type colors
      &.txTypeOpen {
        color: variables.color(success);
        font-weight: 600;
      }
      &.txTypeClose {
        color: variables.color(warning);
        font-weight: 600;
      }
      &.txTypeLiquidate {
        color: variables.color(negative);
        font-weight: 600;
      }
      &.txTypeAddLiquidity {
        color: variables.color(info);
        font-weight: 600;
      }
      &.txTypeRemoveLiquidity {
        color: variables.color(warning);
        font-weight: 600;
      }
      &.txTypeCollectRewards {
        color: variables.color(purple);
        font-weight: 600;
      }
      &.txTypeSetLimitOrders {
        color: variables.color(blue);
        font-weight: 600;
      }
    }
  }

  tbody tr {
    &:hover {
      background-color: variables.bg-color(hover);
    }
    // Style for rows that are still loading details
    &.loadingRow {
      opacity: 0.6;
      td {
        background-color: variables.bg-color(light); // Slightly different background
      }
    }
  }
}

.signatureCell {
  max-width: 200px; // Limit width and allow overflow ellipsis
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Add transaction type icon styles
.txTypeIcon {
  display: inline-flex;
  align-items: center;
  gap: variables.spacing(xs);
  white-space: nowrap;
  width: 100%;

  &::before {
    content: '';
    display: inline-block;
    width: 6px;
    height: 6px;
    border-radius: 50%;
    margin-right: variables.spacing(xs);
    flex-shrink: 0;
  }

  &.txTypeOpen::before {
    background-color: variables.color(success);
  }
  &.txTypeClose::before {
    background-color: variables.color(warning);
  }
  &.txTypeLiquidate::before {
    background-color: variables.color(negative);
  }
  &.txTypeAddLiquidity::before {
    background-color: variables.color(info);
  }
  &.txTypeRemoveLiquidity::before {
    background-color: variables.color(warning);
  }
  &.txTypeCollectRewards::before {
    background-color: variables.color(purple);
  }
  &.txTypeSetLimitOrders::before {
    background-color: variables.color(blue);
  }
}

// Add specific cell styles for the type column
.typeCell {
  padding-left: variables.spacing(sm) !important;
  padding-right: variables.spacing(sm) !important;
  min-width: 160px; // Ensure enough space for the type text
} 