@use '../../styles/variables.module.scss' as variables;

.filterContainer {
  background: variables.bg-color('card');
  border-radius: 8px;
  padding: 12px;
  margin-bottom: 12px;
  border: 1px solid variables.color('border');
}

.filterControls {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
  gap: 12px;
  align-items: start;
}

.filterGroup {
  display: flex;
  flex-direction: column;
  gap: 4px;
}

.filterLabel {
  font-size: 0.75rem;
  color: variables.text-color('secondary');
  font-weight: 500;
  margin-bottom: 2px;
}

.filterSelect {
  padding: 6px 10px;
  border: 1px solid variables.color('border');
  border-radius: 6px;
  background: variables.bg-color('secondary');
  color: variables.text-color('primary');
  font-size: 0.85rem;
  cursor: pointer;
  transition: all 0.2s ease;
  height: 32px;
  width: 100%;

  &:hover {
    border-color: variables.color('primary');
  }

  &:focus {
    outline: none;
    border-color: variables.color('primary');
    box-shadow: 0 0 0 2px rgba(variables.color('primary'), 0.1);
  }

  option {
    padding: 6px;
    background: variables.bg-color('secondary');
    color: variables.text-color('primary');
  }
}

.tokenOption {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 4px 8px;
}

.tokenIcon {
  width: 16px;
  height: 16px;
  border-radius: 50%;
  margin-right: 8px;
  vertical-align: middle;
  object-fit: contain;
}

.buttonGroup {
  display: flex;
  gap: 8px;
  height: 32px;
  margin-top: 12px;
  justify-content: flex-end;
}

.saveButton, 
.resetButton {
  height: 100%;
  padding: 0 20px;
  min-width: 100px;
  border-radius: 6px;
  font-size: 0.8rem;
  font-weight: 600;
  letter-spacing: 0.3px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s ease;
  white-space: nowrap;
}

.saveButton {
  background-color: variables.color('primary');
  color: white;
  border: none;
  
  &:hover {
    background-color: variables.color('primary-dark');
  }

  &:active {
    transform: translateY(1px);
  }
}

.resetButton {
  background-color: transparent;
  color: variables.text-color('secondary');
  border: 1px solid variables.color('border');
  
  &:hover {
    color: variables.color('negative');
    border-color: variables.color('negative');
    background-color: rgba(variables.color('negative'), 0.05);
  }

  &:active {
    transform: translateY(1px);
  }
}

// Saved filters section
.savedFiltersRow {
  margin-bottom: 12px;
  padding: 8px;
  background-color: variables.bg-color('light');
  border-radius: 6px;
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: 8px;
}

.savedFiltersLabel {
  font-weight: 500;
  font-size: 0.85rem;
  color: variables.text-color('secondary');
}

.savedFilters {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
  flex: 1;
}

.savedFilter {
  background-color: variables.bg-color('white');
  border: 1px solid variables.color('border');
  border-radius: 4px;
  padding: 4px 8px;
  font-size: 0.8rem;
  display: flex;
  align-items: center;
  gap: 6px;
  cursor: pointer;
  transition: all 0.2s ease;
  
  &:hover {
    border-color: variables.color('primary');
    background-color: variables.bg-color('light');
  }
}

.savedFilterLabel {
  max-width: 300px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.deleteFilterButton {
  background: none;
  border: none;
  color: variables.text-color('secondary');
  font-size: 16px;
  line-height: 1;
  cursor: pointer;
  padding: 0 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  
  &:hover {
    color: variables.color('negative');
  }
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .filterContainer {
    padding: 8px;
  }

  .filterControls {
    grid-template-columns: repeat(2, 1fr);
    gap: 8px;
  }

  .buttonGroup {
    margin-top: 8px;
    justify-content: stretch;
  }

  .saveButton,
  .resetButton {
    flex: 1;
    max-width: 140px;
  }
}

@media (max-width: 480px) {
  .filterControls {
    grid-template-columns: 1fr;
  }

  .saveButton,
  .resetButton {
    max-width: none;
  }
} 