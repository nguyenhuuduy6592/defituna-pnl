@use '../../styles/variables.module.scss' as variables;
@use "sass:map";

.overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.7);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000; // Ensure it's above other content
  padding: variables.spacing(md);
}

.card {
  background: variables.bg-color(white);
  padding: variables.spacing(lg);
  border-radius: map.get(variables.$border-radius, md);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
  position: relative;
  width: 100%;
  max-width: 500px; // Adjust as needed
  z-index: 1001;
  display: flex;
  flex-direction: column;
  gap: variables.spacing(md);
}

.closeButton {
  position: absolute;
  top: variables.spacing(xs);
  right: variables.spacing(xs);
  background: rgba(255, 255, 255, 0.1);
  border: none;
  font-size: 1.5rem;
  cursor: pointer;
  color: variables.text-color(secondary);
  padding: variables.spacing(xs);
  line-height: 1;

  &:hover {
    color: variables.text-color(primary);
  }
}

.title {
  font-size: variables.font-size(lg);
  font-weight: 600;
  color: variables.text-color(primary);
  margin: 0;
  margin-bottom: variables.spacing(sm); // Add some space below title
  text-align: center;
}

.detailsGrid {
  display: grid;
  grid-template-columns: auto 1fr; // Label and value
  gap: variables.spacing(sm) variables.spacing(md);
  align-items: center;
  font-size: variables.font-size(base);
}

.detailItem {
  display: contents; // Allows label and value to align with grid columns
}

.label {
  font-weight: 600;
  color: variables.text-color(secondary);
  text-align: right;
}

.value {
  color: variables.text-color(primary);
  word-break: break-all; // For long addresses
}

.copyDetailsButton {
  background-color: variables.color(primary);
  color: variables.bg-color(white);
  border: none;
  padding: variables.spacing(sm) variables.spacing(md);
  border-radius: map.get(variables.$border-radius, sm);
  font-size: variables.font-size(base);
  font-weight: 500;
  cursor: pointer;
  transition: background-color 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: variables.spacing(xs);
  margin-top: variables.spacing(md); // Space above the button

  &:hover {
    background-color: variables.color(hover);
  }

  svg {
    font-size: 1.2em;
  }
}

// Copied and adapted from PnLCard.module.scss
.cardOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.85);
  @include variables.flex-center;
  z-index: 1000; // Standard hardcoded z-index for overlay
  padding: variables.spacing(md);
  animation: fadeIn 0.3s ease-out;
  overflow-y: auto; // Allow scrolling for tall cards
}

.modalContainer {
  background: rgba(30, 41, 59, 0.95); // Dark background like PnLCard
  padding: variables.spacing(sm);
  width: calc(100% - 80px);
  max-width: 350px;
  backdrop-filter: blur(20px);
  -webkit-backdrop-filter: blur(20px);
  box-shadow: 
    0 20px 40px rgba(0, 0, 0, 0.4),
    0 0 0 1px rgba(255, 255, 255, 0.1);
  color: white;
  position: relative;
  animation: slideUp 0.4s ease-out;
  margin: variables.spacing(sm) 0;
  border-radius: 12px; // Added border-radius as PnLCard has it implicitly via its structure
  z-index: 1001; // Standard hardcoded z-index for modal content (above overlay)
  
  @media (max-width: 480px) {
    padding: variables.spacing(xs);
    margin: variables.spacing(xs);
    min-width: calc(100% - #{variables.spacing(xs)} * 2);
    max-height: calc(100vh - variables.spacing(md));
    overflow-y: auto;
  }
}

.header {
  @include variables.flex-between;
  margin-bottom: variables.spacing(sm);
  padding: 0 variables.spacing(xs); // Add some horizontal padding to header content

  h2 {
    margin: 0;
    font-size: 1.1rem;
    font-weight: 600;
    color: rgba(255, 255, 255, 0.9);
  }
}

.closeButton {
  background: rgba(255, 255, 255, 0.1);
  border: none;
  width: 24px; // Matched PnLCard size
  height: 24px; // Matched PnLCard size
  border-radius: 50%;
  transition: all 0.2s ease;
  backdrop-filter: blur(10px);
  @include variables.flex-center;
  padding: 0;

  svg {
    color: rgba(255, 255, 255, 0.8);
    width: 14px; // Matched PnLCard icon size
    height: 14px; // Matched PnLCard icon size
  }

  &:hover {
    background: rgba(255, 255, 255, 0.2);
    svg {
      color: white;
    }
  }
}

.cardContent {
  background: linear-gradient(180deg, #243145 0%, #1E293B 100%); // Gradient from PnLCard
  padding: variables.spacing(md); // Increased padding for content area
  box-shadow: 
    0 4px 12px rgba(0, 0, 0, 0.2),
    inset 0 0 0 1px rgba(255, 255, 255, 0.05);
  display: flex;
  flex-direction: column;
  gap: variables.spacing(md); // Consistent gap for lending details
  border-radius: 8px; // Rounded corners for content area
  
  @media (max-width: 480px) {
    padding: variables.spacing(sm);
  }
}

// Styles for StatRow, adapted from PnLCard
.detailsGrid { // This will wrap StatRow components
  display: flex;
  flex-direction: column;
  gap: variables.spacing(sm); // Space between each StatRow
}

.statRow {
  @include variables.flex-between;
  padding: variables.spacing(xs) 0; // Minimal vertical padding for each row
  border-bottom: 1px solid rgba(255, 255, 255, 0.05); // Subtle separator
  width: 100%;

  &:last-child {
    border-bottom: none;
  }

  .label {
    color: rgba(255, 255, 255, 0.6); // Adjusted opacity
    font-size: 0.8rem; // Slightly larger for readability
    font-weight: 400;
    white-space: nowrap;
    margin-right: variables.spacing(sm);
  }

  .value {
    font-weight: 500;
    color: rgba(255, 255, 255, 0.9);
    font-size: 0.85rem; // Slightly larger
    text-align: right;
    word-break: break-all; // For long addresses or values

    &.positiveValue { // Class for positive (green) values
      color: variables.color(positive);
    }
    &.negativeValue { // Class for negative (red) values, if needed later
      color: variables.color(negative);
    }
  }
}

.actions {
  display: flex;
  gap: variables.spacing(sm); // Increased gap
  justify-content: flex-end;
  margin-top: variables.spacing(md); // Increased margin
  padding: 0 variables.spacing(xs); // Add some horizontal padding

  button {
    // Base button style from PnLCard's %button-base or similar
    border: none;
    cursor: pointer;
    text-decoration: none;
    outline: none;
    user-select: none;
    font-family: inherit;
    
    // Specific styles from PnLCard actions
    background: rgba(255, 255, 255, 0.1);
    color: white;
    font-weight: 500;
    padding: variables.spacing(xs) variables.spacing(sm); // Adjusted padding
    border-radius: 6px;
    backdrop-filter: blur(10px);
    transition: all 0.2s ease;
    @include variables.flex-center;
    gap: variables.spacing(xs); // Space between icon and text
    font-size: 0.8rem; // Adjusted font size

    svg {
      font-size: 1.1em; // Icon size relative to text
      margin-right: 2px; // Ensure consistent spacing if gap isn't enough
    }

    &:hover {
      background: rgba(255, 255, 255, 0.2);
      color: white;
    }
  }
}

// Keyframe animations (copied from PnLCard.module.scss)
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes slideUp {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
} 