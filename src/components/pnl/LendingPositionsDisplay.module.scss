@use "sass:map";
@use '../../styles/variables.module.scss' as variables;

.lendingContainer {
  margin: variables.spacing(md) 0;
  padding: variables.spacing(md);
  background-color: variables.bg-color(light);
  border-radius: map.get(variables.$border-radius, sm);
  border: 1px solid variables.color(border);
  width: 100%;
  box-sizing: border-box;
  overflow: visible !important;

  @include variables.responsive(md) {
    padding: variables.spacing(lg);
  }
}

.contentWrapper {
  background-color: variables.bg-color(white);
  border-radius: map.get(variables.$border-radius, sm);
  box-shadow: 0 1px 3px variables.color(shadow);
  position: relative;
  overflow: visible !important;
}

.noPositionsMessage {
  text-align: center;
  padding: variables.spacing(md);
  color: variables.text-color(secondary);
  font-style: italic;
}

.lendingTable {
  width: 100%;
  border-collapse: collapse;
  font-size: variables.font-size(sm);
  
  @include variables.responsive(md) {
    font-size: variables.font-size(base);
  }
  
  th, td {
    border: 1px solid variables.color(border);
    padding: variables.spacing(sm) variables.spacing(md);
    text-align: left;
    white-space: nowrap;
    line-height: 1.4;
  }
  
  th {
    background: variables.bg-color(light);
    font-weight: 700;
    color: variables.text-color(secondary);
    position: sticky;
    top: 0;
    z-index: 1;
    padding: variables.spacing(sm) variables.spacing(md);
  }
  
  tbody tr {
    &:nth-child(even) {
      background: variables.bg-color(light);
    }

    &:hover {
      background-color: variables.bg-color(hover);
    }
  }
}

.vaultInfo {
  display: flex;
  align-items: center;
  gap: variables.spacing(xs);
  
  .vaultIcon {
    width: 1.5rem;
    height: 1.5rem;
    border-radius: 50%;
    overflow: hidden;
    
    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }
}

.walletAddress {
  display: flex;
  align-items: center;
  gap: variables.spacing(xs);
  cursor: pointer;
  
  .copyIcon {
    cursor: pointer;
    color: variables.text-color(secondary);
    transition: color 0.2s ease;
    
    &:hover {
      color: variables.color(primary);
    }
  }
}

.actionButtons {
  display: flex;
  justify-content: flex-start;
  gap: variables.spacing(xs);
}

.shareButton {
  padding: variables.spacing(xs) variables.spacing(sm);
  border-radius: map.get(variables.$border-radius, sm);
  cursor: pointer;
  font-size: variables.font-size(sm);
  line-height: 1;
  text-align: center;
  white-space: nowrap;
  transition: all 0.2s ease;
  background: variables.color(primary);
  color: variables.bg-color(white);
  border: none;
  min-width: 60px;
  display: flex;
  align-items: center;
  gap: calc(#{variables.spacing(xs)} / 2);

  &:hover {
    background: variables.color(hover);
  }

  &:active {
    transform: translateY(1px);
  }
}

.positive {
  color: variables.color(positive);
}

.negative {
  color: variables.color(negative);
}

.neutral {
  color: variables.color(secondary);
  font-size: variables.font-size(xs);
}

.tooltipTrigger {
  cursor: pointer;
  position: relative;
}

// Styles for tooltip content lines & copyable address
.tooltipLine {
  display: flex;
  justify-content: space-between; // Aligns label and value/icon
  align-items: center;
  margin-bottom: variables.spacing(xs); // Add some space between lines

  &:last-child {
    margin-bottom: 0;
  }

  strong {
    margin-right: variables.spacing(sm); // Space between label and value
  }
}

.tooltipCopyableAddress {
  display: inline-flex; // To align text and icon
  align-items: center;
  cursor: pointer;
  color: rgba(255, 255, 255, 0.85); // Brighter color for dark tooltip background
  padding: calc(#{variables.spacing(xs)} / 2);
  margin: calc(-#{variables.spacing(xs)} / 2); // Negative margin to make click target larger
  border-radius: map.get(variables.$border-radius, sm);
  transition: background-color 0.2s ease, color 0.2s ease; // Added color transition

  &:hover,
  &:focus {
    background-color: rgba(variables.color(primary), 0.1); // Light primary highlight on dark
    color: white; // Make text full white on hover/focus for more emphasis
    outline: none;

    .tooltipCopyIcon { // Also ensure icon becomes full white or a brighter accent on hover
      color: white;
    }
  }
}

.tooltipCopyIcon {
  margin-left: variables.spacing(xs);
  font-size: 0.9em; // Slightly smaller than text
  color: rgba(255, 255, 255, 0.7); // Slightly more visible muted icon color on dark
}

.usdValueParentheses {
  font-size: variables.font-size(xs);
  margin-left: variables.spacing(xs);
} 