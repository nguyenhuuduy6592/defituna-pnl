@use "sass:map";
@use '../../styles/variables.module.scss';

.chartOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.75);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 9999;
  padding: variables.spacing(xs);
  backdrop-filter: blur(2px);
}

.chartContainer {
  background: variables.bg-color(white);
  border-radius: map.get(variables.$border-radius, md);
  padding: variables.spacing(sm);
  width: 100%;
  max-width: 1200px;
  max-height: calc(100vh - 32px);
  overflow-y: auto;
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
  position: relative;
  animation: slideUp 0.3s ease-out;

  @include variables.responsive(sm) {
    padding: variables.spacing(lg);
  }
}

.chartHeader {
  @include variables.flex-between;
  padding: variables.spacing(md);
  
  .title {
    display: flex;
    align-items: center;
    font-size: 1.1rem;
    margin: 0;
    
    .infoIcon {
      margin-left: variables.spacing(xs);
      color: variables.color(secondary);
      cursor: help;
      
      &:hover {
        color: variables.color(primary);
      }
    }
  }
  
  .controls {
    display: flex;
    align-items: center;
    gap: variables.spacing(xs);
    
    .periodSelect {
      padding: variables.spacing(xs) variables.spacing(sm);
      border-radius: map.get(variables.$border-radius, sm);
      border: 1px solid variables.color(border);
      background: variables.bg-color(light);
      color: variables.text-color(primary);
      font-size: variables.font-size(sm);
      margin-right: variables.spacing(xs);
    }
    
    .exportButton, .shareButton, .closeButton {
      display: flex;
      align-items: center;
      justify-content: center;
      background: variables.bg-color(light);
      color: variables.text-color(primary);
      border: 1px solid variables.color(border);
      border-radius: map.get(variables.$border-radius, sm);
      padding: variables.spacing(xs);
      cursor: pointer;
      transition: all 0.2s ease;
      
      &:hover {
        background: variables.color(primary);
        color: variables.bg-color(white);
        border-color: variables.color(primary);
      }
    }
    
    .buttonIcon {
      font-size: 1rem;
    }
    
    .closeButton {
      font-size: 1rem;
      font-weight: bold;
      width: 28px;
      height: 28px;
    }
  }
}

.metricToggles {
  display: flex;
  flex-wrap: wrap;
  gap: variables.spacing(md);
  margin-bottom: variables.spacing(lg);
  padding: variables.spacing(md);
  background: variables.bg-color(light);
  border-radius: map.get(variables.$border-radius, sm);

  label {
    display: flex;
    align-items: center;
    gap: variables.spacing(xs);
    cursor: pointer;
    color: variables.text-color(primary);
    font-size: variables.font-size(sm);
    user-select: none;
    padding: variables.spacing(xs) variables.spacing(sm);
    border-radius: map.get(variables.$border-radius, xs);
    transition: all 0.2s ease;

    &:hover {
      background: variables.color(hover);
      color: variables.bg-color(white);
    }

    input[type="checkbox"] {
      cursor: pointer;
      width: 16px;
      height: 16px;
    }
  }
}

.chartContent {
  background: variables.bg-color(white);
  padding: variables.spacing(xs);
  border-radius: map.get(variables.$border-radius, sm);
  border: 1px solid variables.color(border);
  overflow: hidden;
  min-height: 300px;
  height: calc(100vh - 180px);
  max-height: 600px;

  @include variables.responsive(sm) {
    padding: variables.spacing(md);
  }
}

.noData {
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  color: variables.text-color(secondary);
  font-size: variables.font-size(base);
}

.tooltip {
  background: variables.bg-color(white);
  border: 1px solid variables.color(border);
  border-radius: map.get(variables.$border-radius, sm);
  padding: variables.spacing(sm);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);

  p {
    margin: variables.spacing(xs) 0;
    font-size: variables.font-size(sm);
    white-space: nowrap;
  }

  .tooltipLabel {
    font-weight: bold;
    margin-bottom: variables.spacing(xs);
    color: variables.text-color(primary);
  }
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.exportWrapper {
  position: absolute;
  left: -9999px;
  top: -9999px;
  background: variables.bg-color(white);
  padding: variables.spacing(md);
  width: 1000px; // Fixed width for export
  border-radius: map.get(variables.$border-radius, md);
  overflow: hidden;
  
  .chartHeader {
    padding-bottom: variables.spacing(md);
    margin-bottom: variables.spacing(md);
    border-bottom: 1px solid variables.color(border);
    
    .title {
      font-size: 1.5rem;
      font-weight: 600;
      color: variables.text-color(primary);
      text-align: center;
      width: 100%;
    }
  }
}

.chartExportContent {
  background: variables.bg-color(white);
  padding: variables.spacing(md);
  border-radius: map.get(variables.$border-radius, sm);
  border: 1px solid variables.color(border);
  overflow: hidden;
  height: 500px; // Fixed height for export
}