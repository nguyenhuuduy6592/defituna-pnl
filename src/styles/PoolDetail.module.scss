@use "sass:map";
@use './variables.module.scss' as variables;

.container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 variables.spacing(md);
}

.linkWithoutUnderline {
  text-decoration: none;
  color: inherit;
}

.main {
  padding: variables.spacing(lg) 0;
}

.header {
  display: flex;
  align-items: center;
  margin-bottom: variables.spacing(xl);
}

.navigationLinks {
  display: flex;
  gap: variables.spacing(md);
  margin-right: variables.spacing(lg);
}

.backButton {
  background: variables.bg-color(white);
  color: variables.text-color(secondary);
  border: 1px solid variables.color(border);
  border-radius: variables.spacing(md);
  padding: variables.spacing(sm) variables.spacing(md);
  font-size: variables.font-size(base);
  cursor: pointer;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  
  &:hover {
    background: rgba(variables.color(primary), 0.1);
    border-color: variables.color(primary);
    color: variables.color(primary);
  }
}

.heading {
  font-size: calc(variables.font-size(xl) * 1.3);
  font-weight: 700;
  color: variables.text-color(primary);
  margin: 0;
}

.loadingContainer,
.errorContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: variables.spacing(xl) 0;
  text-align: center;
}

.loader {
  border: 3px solid rgba(variables.color(border), 0.2);
  border-radius: 50%;
  border-top: 3px solid variables.color(primary);
  width: 30px;
  height: 30px;
  animation: spin 1s linear infinite;
  margin-bottom: variables.spacing(md);
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.errorMessage {
  color: variables.color(negative);
  margin-bottom: variables.spacing(md);
}

.poolOverview {
  @include variables.card;
  padding: variables.spacing(md);
  margin-bottom: variables.spacing(md);
  display: flex;
  flex-direction: column;
  gap: variables.spacing(md);
}

.poolIdentity {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.tokenPair {
  display: flex;
  align-items: center;
  gap: variables.spacing(sm);
}

.tokenInfo {
  display: flex;
  align-items: center;
  gap: variables.spacing(xs);
}

.tokenLogo {
  width: 24px;
  height: 24px;
  border-radius: 50%;
  overflow: hidden;
  background-color: variables.bg-color(light);
  display: flex;
  align-items: center;
  justify-content: center;
}

.tokenSymbol {
  font-size: variables.font-size(lg);
  font-weight: 600;
  color: variables.text-color(primary);
}

.separator {
  color: variables.text-color(secondary);
  font-size: variables.font-size(lg);
}

.priceInfo {
  display: flex;
  align-items: center;
  gap: variables.spacing(sm);
  font-size: variables.font-size(base);
  color: variables.text-color(secondary);
  background: variables.bg-color(light);
  padding: variables.spacing(sm);
  border-radius: variables.spacing(sm);
}

.priceLabel {
  font-weight: 500;
}

.priceValue {
  font-family: monospace;
  color: variables.text-color(primary);
}

.provider {
  font-size: variables.font-size(xs);
  color: variables.text-color(secondary);
  background: variables.bg-color(light);
  padding: variables.spacing(xs) variables.spacing(sm);
  border-radius: variables.spacing(md);
  text-transform: capitalize;
  
  span {
    color: variables.text-color(primary);
  }
}

.addressSection {
  display: flex;
  flex-direction: column;
  gap: variables.spacing(sm);
}

.addressItem {
  display: flex;
  flex-direction: column;
  gap: variables.spacing(xs);
}

.addressLabel {
  font-size: variables.font-size(xs);
  color: variables.text-color(secondary);
}

.addressValue {
  font-size: variables.font-size(sm);
  color: variables.text-color(primary);
  background: variables.bg-color(light);
  padding: variables.spacing(xs) variables.spacing(sm);
  border-radius: variables.spacing(sm);
  overflow: hidden;
  text-overflow: ellipsis;
  font-family: monospace;
}

.timeframeSelector {
  display: flex;
  justify-content: center;
  gap: variables.spacing(md);
  margin: variables.spacing(lg) 0;
}

.timeframeButton {
  background: variables.bg-color(light);
  color: variables.text-color(secondary);
  border: 1px solid variables.color(border);
  border-radius: variables.spacing(md);
  padding: variables.spacing(sm) variables.spacing(md);
  font-size: variables.font-size(base);
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  
  &.active {
    background-color: variables.color(primary);
    color: white;
    border-color: variables.color(primary);
  }
  
  &:hover:not(.active) {
    background-color: rgba(variables.color(primary), 0.1);
    color: variables.color(primary);
  }
}

.statsGrid {
  display: grid;
  grid-template-columns: 1fr;
  gap: variables.spacing(md);
  margin-bottom: variables.spacing(lg);
}

.statCard {
  @include variables.card;
  padding: variables.spacing(md);
  transition: transform 0.2s ease;
  
  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 8px variables.color(shadow);
  }
}

.statLabel {
  font-size: variables.font-size(sm);
  font-weight: 500;
  color: variables.text-color(secondary);
  margin-bottom: variables.spacing(sm);
}

.statValue {
  font-size: variables.font-size(xl);
  font-weight: 600;
  color: variables.text-color(primary);
}

.poolDetails {
  @include variables.card;
  padding: variables.spacing(md);
}

.section {
  margin-bottom: variables.spacing(lg);
}

.sectionTitle {
  font-size: variables.font-size(base);
  font-weight: 600;
  color: variables.text-color(primary);
  margin: 0 0 variables.spacing(md) 0;
}

.detailGrid {
  display: grid;
  grid-template-columns: 1fr;
  gap: variables.spacing(sm);
}

.detailItem {
  display: flex;
  flex-direction: column;
  gap: variables.spacing(xs);
}

.detailLabel {
  font-size: variables.font-size(xs);
  color: variables.text-color(secondary);
}

.detailValue {
  font-size: variables.font-size(sm);
  color: variables.text-color(primary);
  background: variables.bg-color(light);
  padding: variables.spacing(xs) variables.spacing(sm);
  border-radius: variables.spacing(sm);
  overflow: hidden;
  text-overflow: ellipsis;
  font-family: monospace;
}

.actions {
  display: flex;
  flex-direction: column;
  gap: variables.spacing(sm);
}

.actionButton {
  @extend %button-base;
  background-color: variables.color(primary);
  color: white;
  border-radius: variables.spacing(md);
  padding: variables.spacing(sm) variables.spacing(md);
  font-size: variables.font-size(sm);
  font-weight: 500;
  
  &:hover {
    background-color: variables.color(hover);
  }
}

/* Responsive adjustments */
@media (min-width: map.get(variables.$breakpoints, sm)) {
  .statsGrid {
    grid-template-columns: repeat(2, 1fr);
  }
  
  .detailGrid {
    grid-template-columns: repeat(2, 1fr);
  }
  
  .actions {
    flex-direction: row;
    justify-content: center;
  }
  
  .actionButton {
    min-width: 150px;
  }
}

@media (min-width: map.get(variables.$breakpoints, lg)) {
  .statsGrid {
    grid-template-columns: repeat(3, 1fr);
  }
  
  .detailGrid {
    grid-template-columns: repeat(4, 1fr);
  }
  
  .actions {
    justify-content: flex-end;
  }
}

.derivedMetricsSection {
  margin: 1.5rem 0;
  padding: 1rem;
  background-color: variables.color(background-secondary);
  border-radius: 10px;
  
  h2 {
    font-size: variables.font-size(lg);
    margin-bottom: 1rem;
    color: variables.text-color(primary);
  }
}

.educationSection {
  margin-top: 40px;
  padding: 24px;
  background-color: variables.bg-color(white);
  border-radius: 12px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
}

.educationHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
  font-size: 22px;
  
  @media (max-width: 767px) {
    flex-direction: column;
    align-items: flex-start;
    gap: 16px;
  }
}

.keyConceptsInfo {
  display: flex;
  align-items: center;
  gap: 8px;
  margin-left: 16px;
  font-size: 15px;
  
  span {
    margin-right: 16px;
    font-weight: 500;
    color: variables.text-color(secondary);
  }
  
  @media (max-width: 767px) {
    margin-left: 0;
    flex-wrap: wrap;
  }
} 