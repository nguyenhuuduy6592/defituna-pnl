@use "sass:map";
@use 'variables.module.scss';

// Chart colors as CSS variables
:root {
  --chart-positive: #{variables.color(positive)};
  --chart-negative: #{variables.color(negative)};
  --chart-neutral: #{variables.color(neutral)};
  --chart-primary: #{variables.color(primary)};
}

// Reset and base styles
html, 
body {
  padding: 0;
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,
    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
  font-size: variables.font-size(base);
  color: variables.text-color(primary);
  line-height: 1.5;
  background: variables.bg-color(white);
}

* {
  box-sizing: border-box;
  
  &::before,
  &::after {
    box-sizing: border-box;
  }
}

// Layout containers
.container {
  width: 100%;
  max-width: 90vw; // Makes the container responsive to viewport width
  margin: 0 auto;
  padding: variables.spacing(md);
  
  @include variables.responsive(sm) {
    padding: variables.spacing(lg);
  }

  @include variables.responsive(xl) {
    max-width: 1600px; // Maximum width on very large screens
  }
}

// Typography
h1 { 
  font-size: variables.font-size(xl) * 1.5;
  margin-bottom: variables.spacing(lg);
}

h2 { 
  font-size: variables.font-size(xl);
  margin-bottom: variables.spacing(md);
}

h3 { 
  font-size: variables.font-size(lg);
  margin-bottom: variables.spacing(md);
}

h4, h5, h6 { 
  font-size: variables.font-size(base);
  margin-bottom: variables.spacing(sm);
}

h1, h2, h3, h4, h5, h6 {
  color: variables.text-color(primary);
  margin-top: 0;
  font-weight: 600;
  line-height: 1.2;
}

// Form elements
input,
select,
textarea {
  @extend %input-base;
  font-size: variables.font-size(base);
  color: variables.text-color(primary);

  &::placeholder {
    color: variables.text-color(disabled);
  }
}

button {
  @extend %button-base;
  font-size: variables.font-size(base);
}

// Common status classes
.loading { 
  color: variables.color(primary); 
  margin-top: variables.spacing(sm);
  display: flex;
  align-items: center;
  gap: variables.spacing(xs);

  &::after {
    content: "...";
  }
}

.error { 
  color: variables.color(negative); 
  margin-top: variables.spacing(sm);
  padding: variables.spacing(sm);
  border-radius: map.get(variables.$border-radius, sm);
  background-color: rgba(variables.color(negative), 0.1);
}

// Common utility classes
.text-primary { color: variables.text-color(primary); }
.text-secondary { color: variables.text-color(secondary); }
.text-disabled { color: variables.text-color(disabled); }

.positive { color: variables.color(positive); }
.negative { color: variables.color(negative); }
.zero { color: variables.color(zero); }

.bg-light { background-color: variables.bg-color(light); }
.bg-white { background-color: variables.bg-color(white); }

// Spacing utilities
.mt-sm { margin-top: variables.spacing(sm); }
.mt-md { margin-top: variables.spacing(md); }
.mt-lg { margin-top: variables.spacing(lg); }

.mb-sm { margin-bottom: variables.spacing(sm); }
.mb-md { margin-bottom: variables.spacing(md); }
.mb-lg { margin-bottom: variables.spacing(lg); }

// Accessibility
.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}